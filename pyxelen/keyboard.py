import enum
import pyrsistent
import sdl2


class Key(enum.IntEnum):
    UNKNOWN = sdl2.SDLK_UNKNOWN
    RETURN = sdl2.SDLK_RETURN
    ESCAPE = sdl2.SDLK_ESCAPE
    BACKSPACE = sdl2.SDLK_BACKSPACE
    TAB = sdl2.SDLK_TAB
    SPACE = sdl2.SDLK_SPACE
    EXCLAIM = sdl2.SDLK_EXCLAIM
    QUOTEDBL = sdl2.SDLK_QUOTEDBL
    HASH = sdl2.SDLK_HASH
    PERCENT = sdl2.SDLK_PERCENT
    DOLLAR = sdl2.SDLK_DOLLAR
    AMPERSAND = sdl2.SDLK_AMPERSAND
    QUOTE = sdl2.SDLK_QUOTE
    LEFTPAREN = sdl2.SDLK_LEFTPAREN
    RIGHTPAREN = sdl2.SDLK_RIGHTPAREN
    ASTERISK = sdl2.SDLK_ASTERISK
    PLUS = sdl2.SDLK_PLUS
    COMMA = sdl2.SDLK_COMMA
    MINUS = sdl2.SDLK_MINUS
    PERIOD = sdl2.SDLK_PERIOD
    SLASH = sdl2.SDLK_SLASH
    K0 = sdl2.SDLK_0
    K1 = sdl2.SDLK_1
    K2 = sdl2.SDLK_2
    K3 = sdl2.SDLK_3
    K4 = sdl2.SDLK_4
    K5 = sdl2.SDLK_5
    K6 = sdl2.SDLK_6
    K7 = sdl2.SDLK_7
    K8 = sdl2.SDLK_8
    K9 = sdl2.SDLK_9
    COLON = sdl2.SDLK_COLON
    SEMICOLON = sdl2.SDLK_SEMICOLON
    LESS = sdl2.SDLK_LESS
    EQUALS = sdl2.SDLK_EQUALS
    GREATER = sdl2.SDLK_GREATER
    QUESTION = sdl2.SDLK_QUESTION
    AT = sdl2.SDLK_AT
    LEFTBRACKET = sdl2.SDLK_LEFTBRACKET
    BACKSLASH = sdl2.SDLK_BACKSLASH
    RIGHTBRACKET = sdl2.SDLK_RIGHTBRACKET
    CARET = sdl2.SDLK_CARET
    UNDERSCORE = sdl2.SDLK_UNDERSCORE
    BACKQUOTE = sdl2.SDLK_BACKQUOTE
    A = sdl2.SDLK_a
    B = sdl2.SDLK_b
    C = sdl2.SDLK_c
    D = sdl2.SDLK_d
    E = sdl2.SDLK_e
    F = sdl2.SDLK_f
    G = sdl2.SDLK_g
    H = sdl2.SDLK_h
    I = sdl2.SDLK_i
    J = sdl2.SDLK_j
    K = sdl2.SDLK_k
    L = sdl2.SDLK_l
    M = sdl2.SDLK_m
    N = sdl2.SDLK_n
    O = sdl2.SDLK_o
    P = sdl2.SDLK_p
    Q = sdl2.SDLK_q
    R = sdl2.SDLK_r
    S = sdl2.SDLK_s
    T = sdl2.SDLK_t
    U = sdl2.SDLK_u
    V = sdl2.SDLK_v
    W = sdl2.SDLK_w
    X = sdl2.SDLK_x
    Y = sdl2.SDLK_y
    Z = sdl2.SDLK_z
    CAPSLOCK = sdl2.SDLK_CAPSLOCK
    F1 = sdl2.SDLK_F1
    F2 = sdl2.SDLK_F2
    F3 = sdl2.SDLK_F3
    F4 = sdl2.SDLK_F4
    F5 = sdl2.SDLK_F5
    F6 = sdl2.SDLK_F6
    F7 = sdl2.SDLK_F7
    F8 = sdl2.SDLK_F8
    F9 = sdl2.SDLK_F9
    F10 = sdl2.SDLK_F10
    F11 = sdl2.SDLK_F11
    F12 = sdl2.SDLK_F12
    PRINTSCREEN = sdl2.SDLK_PRINTSCREEN
    SCROLLLOCK = sdl2.SDLK_SCROLLLOCK
    PAUSE = sdl2.SDLK_PAUSE
    INSERT = sdl2.SDLK_INSERT
    HOME = sdl2.SDLK_HOME
    PAGEUP = sdl2.SDLK_PAGEUP
    DELETE = sdl2.SDLK_DELETE
    END = sdl2.SDLK_END
    PAGEDOWN = sdl2.SDLK_PAGEDOWN
    RIGHT = sdl2.SDLK_RIGHT
    LEFT = sdl2.SDLK_LEFT
    DOWN = sdl2.SDLK_DOWN
    UP = sdl2.SDLK_UP
    NUMLOCKCLEAR = sdl2.SDLK_NUMLOCKCLEAR
    KP_DIVIDE = sdl2.SDLK_KP_DIVIDE
    KP_MULTIPLY = sdl2.SDLK_KP_MULTIPLY
    KP_MINUS = sdl2.SDLK_KP_MINUS
    KP_PLUS = sdl2.SDLK_KP_PLUS
    KP_ENTER = sdl2.SDLK_KP_ENTER
    KP_1 = sdl2.SDLK_KP_1
    KP_2 = sdl2.SDLK_KP_2
    KP_3 = sdl2.SDLK_KP_3
    KP_4 = sdl2.SDLK_KP_4
    KP_5 = sdl2.SDLK_KP_5
    KP_6 = sdl2.SDLK_KP_6
    KP_7 = sdl2.SDLK_KP_7
    KP_8 = sdl2.SDLK_KP_8
    KP_9 = sdl2.SDLK_KP_9
    KP_0 = sdl2.SDLK_KP_0
    KP_PERIOD = sdl2.SDLK_KP_PERIOD
    APPLICATION = sdl2.SDLK_APPLICATION
    POWER = sdl2.SDLK_POWER
    KP_EQUALS = sdl2.SDLK_KP_EQUALS
    F13 = sdl2.SDLK_F13
    F14 = sdl2.SDLK_F14
    F15 = sdl2.SDLK_F15
    F16 = sdl2.SDLK_F16
    F17 = sdl2.SDLK_F17
    F18 = sdl2.SDLK_F18
    F19 = sdl2.SDLK_F19
    F20 = sdl2.SDLK_F20
    F21 = sdl2.SDLK_F21
    F22 = sdl2.SDLK_F22
    F23 = sdl2.SDLK_F23
    F24 = sdl2.SDLK_F24
    EXECUTE = sdl2.SDLK_EXECUTE
    HELP = sdl2.SDLK_HELP
    MENU = sdl2.SDLK_MENU
    SELECT = sdl2.SDLK_SELECT
    STOP = sdl2.SDLK_STOP
    AGAIN = sdl2.SDLK_AGAIN
    UNDO = sdl2.SDLK_UNDO
    CUT = sdl2.SDLK_CUT
    COPY = sdl2.SDLK_COPY
    PASTE = sdl2.SDLK_PASTE
    FIND = sdl2.SDLK_FIND
    MUTE = sdl2.SDLK_MUTE
    VOLUMEUP = sdl2.SDLK_VOLUMEUP
    VOLUMEDOWN = sdl2.SDLK_VOLUMEDOWN
    KP_COMMA = sdl2.SDLK_KP_COMMA
    KP_EQUALSAS400 = sdl2.SDLK_KP_EQUALSAS400
    ALTERASE = sdl2.SDLK_ALTERASE
    SYSREQ = sdl2.SDLK_SYSREQ
    CANCEL = sdl2.SDLK_CANCEL
    CLEAR = sdl2.SDLK_CLEAR
    PRIOR = sdl2.SDLK_PRIOR
    RETURN2 = sdl2.SDLK_RETURN2
    SEPARATOR = sdl2.SDLK_SEPARATOR
    OUT = sdl2.SDLK_OUT
    OPER = sdl2.SDLK_OPER
    CLEARAGAIN = sdl2.SDLK_CLEARAGAIN
    CRSEL = sdl2.SDLK_CRSEL
    EXSEL = sdl2.SDLK_EXSEL
    KP_00 = sdl2.SDLK_KP_00
    KP_000 = sdl2.SDLK_KP_000
    THOUSANDSSEPARATOR = sdl2.SDLK_THOUSANDSSEPARATOR
    DECIMALSEPARATOR = sdl2.SDLK_DECIMALSEPARATOR
    CURRENCYUNIT = sdl2.SDLK_CURRENCYUNIT
    CURRENCYSUBUNIT = sdl2.SDLK_CURRENCYSUBUNIT
    KP_LEFTPAREN = sdl2.SDLK_KP_LEFTPAREN
    KP_RIGHTPAREN = sdl2.SDLK_KP_RIGHTPAREN
    KP_LEFTBRACE = sdl2.SDLK_KP_LEFTBRACE
    KP_RIGHTBRACE = sdl2.SDLK_KP_RIGHTBRACE
    KP_TAB = sdl2.SDLK_KP_TAB
    KP_BACKSPACE = sdl2.SDLK_KP_BACKSPACE
    KP_A = sdl2.SDLK_KP_A
    KP_B = sdl2.SDLK_KP_B
    KP_C = sdl2.SDLK_KP_C
    KP_D = sdl2.SDLK_KP_D
    KP_E = sdl2.SDLK_KP_E
    KP_F = sdl2.SDLK_KP_F
    KP_XOR = sdl2.SDLK_KP_XOR
    KP_POWER = sdl2.SDLK_KP_POWER
    KP_PERCENT = sdl2.SDLK_KP_PERCENT
    KP_LESS = sdl2.SDLK_KP_LESS
    KP_GREATER = sdl2.SDLK_KP_GREATER
    KP_AMPERSAND = sdl2.SDLK_KP_AMPERSAND
    KP_DBLAMPERSAND = sdl2.SDLK_KP_DBLAMPERSAND
    KP_VERTICALBAR = sdl2.SDLK_KP_VERTICALBAR
    KP_DBLVERTICALBAR = sdl2.SDLK_KP_DBLVERTICALBAR
    KP_COLON = sdl2.SDLK_KP_COLON
    KP_HASH = sdl2.SDLK_KP_HASH
    KP_SPACE = sdl2.SDLK_KP_SPACE
    KP_AT = sdl2.SDLK_KP_AT
    KP_EXCLAM = sdl2.SDLK_KP_EXCLAM
    KP_MEMSTORE = sdl2.SDLK_KP_MEMSTORE
    KP_MEMRECALL = sdl2.SDLK_KP_MEMRECALL
    KP_MEMCLEAR = sdl2.SDLK_KP_MEMCLEAR
    KP_MEMADD = sdl2.SDLK_KP_MEMADD
    KP_MEMSUBTRACT = sdl2.SDLK_KP_MEMSUBTRACT
    KP_MEMMULTIPLY = sdl2.SDLK_KP_MEMMULTIPLY
    KP_MEMDIVIDE = sdl2.SDLK_KP_MEMDIVIDE
    KP_PLUSMINUS = sdl2.SDLK_KP_PLUSMINUS
    KP_CLEAR = sdl2.SDLK_KP_CLEAR
    KP_CLEARENTRY = sdl2.SDLK_KP_CLEARENTRY
    KP_BINARY = sdl2.SDLK_KP_BINARY
    KP_OCTAL = sdl2.SDLK_KP_OCTAL
    KP_DECIMAL = sdl2.SDLK_KP_DECIMAL
    KP_HEXADECIMAL = sdl2.SDLK_KP_HEXADECIMAL
    LCTRL = sdl2.SDLK_LCTRL
    LSHIFT = sdl2.SDLK_LSHIFT
    LALT = sdl2.SDLK_LALT
    LGUI = sdl2.SDLK_LGUI
    RCTRL = sdl2.SDLK_RCTRL
    RSHIFT = sdl2.SDLK_RSHIFT
    RALT = sdl2.SDLK_RALT
    RGUI = sdl2.SDLK_RGUI
    MODE = sdl2.SDLK_MODE
    AUDIONEXT = sdl2.SDLK_AUDIONEXT
    AUDIOPREV = sdl2.SDLK_AUDIOPREV
    AUDIOSTOP = sdl2.SDLK_AUDIOSTOP
    AUDIOPLAY = sdl2.SDLK_AUDIOPLAY
    AUDIOMUTE = sdl2.SDLK_AUDIOMUTE
    MEDIASELECT = sdl2.SDLK_MEDIASELECT
    WWW = sdl2.SDLK_WWW
    MAIL = sdl2.SDLK_MAIL
    CALCULATOR = sdl2.SDLK_CALCULATOR
    COMPUTER = sdl2.SDLK_COMPUTER
    AC_SEARCH = sdl2.SDLK_AC_SEARCH
    AC_HOME = sdl2.SDLK_AC_HOME
    AC_BACK = sdl2.SDLK_AC_BACK
    AC_FORWARD = sdl2.SDLK_AC_FORWARD
    AC_STOP = sdl2.SDLK_AC_STOP
    AC_REFRESH = sdl2.SDLK_AC_REFRESH
    AC_BOOKMARKS = sdl2.SDLK_AC_BOOKMARKS
    BRIGHTNESSDOWN = sdl2.SDLK_BRIGHTNESSDOWN
    BRIGHTNESSUP = sdl2.SDLK_BRIGHTNESSUP
    DISPLAYSWITCH = sdl2.SDLK_DISPLAYSWITCH
    KBDILLUMTOGGLE = sdl2.SDLK_KBDILLUMTOGGLE
    KBDILLUMDOWN = sdl2.SDLK_KBDILLUMDOWN
    KBDILLUMUP = sdl2.SDLK_KBDILLUMUP
    EJECT = sdl2.SDLK_EJECT
    SLEEP = sdl2.SDLK_SLEEP
    APP1 = sdl2.SDLK_APP1
    APP2 = sdl2.SDLK_APP2
    AUDIOREWIND = sdl2.SDLK_AUDIOREWIND
    AUDIOFASTFORWARD = sdl2.SDLK_AUDIOFASTFORWARD


class KeyMask(enum.Flag):
    NONE = sdl2.KMOD_NONE
    LEFT_SHIFT = sdl2.KMOD_LSHIFT
    RIGHT_SHIFT = sdl2.KMOD_RSHIFT
    LEFT_CONTROL = sdl2.KMOD_LCTRL
    RIGHT_CONTROL = sdl2.KMOD_RCTRL
    LEFT_ALT = sdl2.KMOD_LALT
    RIGHT_ALT = sdl2.KMOD_RALT
    LEFT_SUPER = sdl2.KMOD_LGUI
    RIGHT_SUPER = sdl2.KMOD_RGUI
    NUMLOCK = sdl2.KMOD_NUM
    CAPSLOCK = sdl2.KMOD_CAPS
    MODE = sdl2.KMOD_MODE
    CONTROL = sdl2.KMOD_CTRL
    SHIFT = sdl2.KMOD_SHIFT
    ALT = sdl2.KMOD_ALT
    SUPER = sdl2.KMOD_GUI


class KeyModifiers(pyrsistent.PClass):
    control = pyrsistent.field(type=bool, mandatory=True, initial=False)
    shift = pyrsistent.field(type=bool, mandatory=True, initial=False)
    alt = pyrsistent.field(type=bool, mandatory=True, initial=False)

    @classmethod
    def now(cls):
        try:
            mod = KeyMask(sdl2.SDL_GetModState())
        except:
            return cls()
        return cls(
            control=bool(KeyMask.CONTROL & mod),
            shift=bool(KeyMask.SHIFT & mod),
            alt=bool(KeyMask.ALT & mod),
        )


